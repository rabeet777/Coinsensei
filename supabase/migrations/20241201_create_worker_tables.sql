-- Create job_logs table for worker job tracking
CREATE TABLE IF NOT EXISTS job_logs (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  job_id VARCHAR(255) UNIQUE NOT NULL,
  job_type VARCHAR(50) NOT NULL CHECK (job_type IN ('gas-topup', 'consolidation', 'sync', 'deposit-detection')),
  status VARCHAR(20) NOT NULL DEFAULT 'pending' CHECK (status IN ('pending', 'active', 'completed', 'failed', 'retrying')),
  wallet_address VARCHAR(255),
  user_id UUID,
  triggered_by VARCHAR(20) NOT NULL DEFAULT 'system' CHECK (triggered_by IN ('system', 'manual', 'deposit', 'schedule')),
  data JSONB DEFAULT '{}',
  error_message TEXT,
  started_at TIMESTAMPTZ,
  completed_at TIMESTAMPTZ,
  retry_count INTEGER DEFAULT 0,
  max_retries INTEGER DEFAULT 3,
  created_at TIMESTAMPTZ DEFAULT NOW(),
  updated_at TIMESTAMPTZ DEFAULT NOW()
);

-- Add indexes for better query performance
CREATE INDEX IF NOT EXISTS idx_job_logs_job_type ON job_logs(job_type);
CREATE INDEX IF NOT EXISTS idx_job_logs_status ON job_logs(status);
CREATE INDEX IF NOT EXISTS idx_job_logs_wallet_address ON job_logs(wallet_address);
CREATE INDEX IF NOT EXISTS idx_job_logs_user_id ON job_logs(user_id);
CREATE INDEX IF NOT EXISTS idx_job_logs_triggered_by ON job_logs(triggered_by);
CREATE INDEX IF NOT EXISTS idx_job_logs_created_at ON job_logs(created_at DESC);
CREATE INDEX IF NOT EXISTS idx_job_logs_updated_at ON job_logs(updated_at DESC);

-- Add worker dashboard flags to existing user_wallets table
DO $$
BEGIN
  -- Check if user_wallets table exists
  IF EXISTS (SELECT FROM information_schema.tables WHERE table_name = 'user_wallets') THEN
    -- Add new columns if they don't exist
    IF NOT EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'user_wallets' AND column_name = 'needs_consolidation') THEN
      ALTER TABLE user_wallets ADD COLUMN needs_consolidation BOOLEAN DEFAULT FALSE;
    END IF;
    
    IF NOT EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'user_wallets' AND column_name = 'needs_gas') THEN
      ALTER TABLE user_wallets ADD COLUMN needs_gas BOOLEAN DEFAULT FALSE;
    END IF;
    
    IF NOT EXISTS (SELECT FROM information_schema.columns WHERE table_name = 'user_wallets' AND column_name = 'last_sync') THEN
      ALTER TABLE user_wallets ADD COLUMN last_sync TIMESTAMPTZ DEFAULT NOW();
    END IF;
  ELSE
    RAISE NOTICE 'user_wallets table does not exist. Please ensure it exists before running this migration.';
  END IF;
END $$;

-- Add indexes for wallet flags on user_wallets table
CREATE INDEX IF NOT EXISTS idx_user_wallets_needs_consolidation ON user_wallets(needs_consolidation);
CREATE INDEX IF NOT EXISTS idx_user_wallets_needs_gas ON user_wallets(needs_gas);
CREATE INDEX IF NOT EXISTS idx_user_wallets_last_sync ON user_wallets(last_sync DESC);

-- Create function to update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
  NEW.updated_at = NOW();
  RETURN NEW;
END;
$$ language 'plpgsql';

-- Create triggers for automatic updated_at updates
DROP TRIGGER IF EXISTS update_job_logs_updated_at ON job_logs;
CREATE TRIGGER update_job_logs_updated_at
  BEFORE UPDATE ON job_logs
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

-- Add trigger for user_wallets if it doesn't exist
DROP TRIGGER IF EXISTS update_user_wallets_updated_at ON user_wallets;
CREATE TRIGGER update_user_wallets_updated_at
  BEFORE UPDATE ON user_wallets
  FOR EACH ROW
  EXECUTE FUNCTION update_updated_at_column();

-- Insert some sample data for testing (optional - remove in production)
-- INSERT INTO job_logs (job_id, job_type, status, wallet_address, triggered_by, data) VALUES
-- ('gas-topup-1234567890-abc123', 'gas-topup', 'completed', 'TRX1234567890abcdef1234567890abcdef123456', 'system', '{"amount": "1.0", "gas_price": "100"}'),
-- ('consolidation-1234567891-def456', 'consolidation', 'failed', 'TRX1234567890abcdef1234567890abcdef123456', 'manual', '{"total_amount": "100.0"}'),
-- ('sync-1234567892-ghi789', 'sync', 'active', 'TRX1234567890abcdef1234567890abcdef123456', 'schedule', '{"last_block": 12345}');

COMMENT ON TABLE job_logs IS 'Tracks all background worker jobs for gas top-up, consolidation, sync, and deposit detection';
COMMENT ON COLUMN job_logs.job_id IS 'Unique identifier for the job, typically generated by the job queue';
COMMENT ON COLUMN job_logs.job_type IS 'Type of job: gas-topup, consolidation, sync, or deposit-detection';
COMMENT ON COLUMN job_logs.status IS 'Current status of the job';
COMMENT ON COLUMN job_logs.triggered_by IS 'What triggered this job: system, manual, deposit, or schedule';
COMMENT ON COLUMN job_logs.data IS 'JSON data specific to the job type';
COMMENT ON COLUMN job_logs.retry_count IS 'Number of times this job has been retried';
COMMENT ON COLUMN job_logs.max_retries IS 'Maximum number of retries allowed for this job'; 